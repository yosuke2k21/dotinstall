# -*- coding: utf-8 -*-


###########################################
### 第６回 文字列に値を埋め込んでみよう ###
###########################################

# Q. name変数, score変数を作って、"name: taguchi, score: 52.8" と表示させてみよう



###########################
### 第７回 ifで条件分岐 ###
###########################

# Q. ユーザから点数の入力を受け付けて(input使う)、コメントを返してみよう
#     (80点以上, 60点以上, それ以下)



################################
### 第８回 whileでループ処理 ###
################################

# Q. whileで0から9を表示してみよう
# Q. 途中でbreakを入れて抜けてみよう



################################
### 第９回 forで繰り返し処理 ###
################################

# Q. forで0から9を表示してみよう
# Q. 途中でbreakしてみよう
# Q. 途中でcontinueしてみよう



###################################
### 第１０回 関数を作ってみよう ###
###################################

# Q. "hi"と表示する関数を作ってみよう
# Q. 関数に引数を渡して実行しよう("hi name:age")
#     --> tom23歳、bob21歳、steve、rick



###########################################
### 第１１回 関数の返り値を使ってみよう ###
###########################################

# Q. "hi"を関数の中のreturnで受け取って、printで表示



###########################################
### 第１２回 変数のスコープを理解しよう ###
###########################################

# Q. グローバル変数msgで"hello global", 関数内のローカル変数msgで"hi"と表示してみよう



#####################################
### 第１３回 クラスを作ってみよう ###
#####################################

# Q. Userクラスを作成し(空で)、インスタンス変数としてtom20歳とbob15歳を作り、
#     名前と年齢を表示してみよう



#############################################
### 第１４回 コンストラクタを使ってみよう ###
#############################################

# Q. コンストラクタを使ってUser型の属性を渡してみよう
# Q. インスタンス化するときに名前を渡し(tom, bob)、名前を表示してみよう



#########################################
### 第１５回 クラス変数を使ってみよう ###
#########################################

# Q. 変数countを使って、ユーザ数(インスタンス変数を作る回数)を表示しよう

# class User:
#     def __init__():
# 
# tom = User("tom")
# bob = User("bob")



#######################################
### 第１６回 メソッドを使ってみよう ###
#######################################

# Q. tomとbobでインスタンスメソッド("hi (name)"と表示する関数)を作ってみよう 
# Q. クラスメソッドでインスタンスの数を表示してみよう

# class User:
#     def __init__():
# 
# tom = User()
# bob = User()



#######################################
### 第１８回 クラスを継承してみよう ###
#######################################

# Q. Userクラスを継承して、AdminUserクラス(属性は名前と年齢)を作ろう
# Q. AdminUserでsay_hello関数を作ろう
# Q. say_hi関数をoverrideしてみよう

# class User:
#     def __init__(self, name):
#         self.name = name
# 
# 
# tom = AdminUser("tom")
# bob = AdminUser("bob")



###########################################
### 第１９回 クラスを多重継承してみよう ###
###########################################

# Q. A，Bクラスを多重継承してsay_a,say_bを実行してみよう



#########################################
### 第２０回 モジュールでファイル分割 ###
#########################################

# Q. クラスのコードを別ファイルにまとめよう



#######################################
### 第２３回 リスト型を使ってみよう ###
#######################################

 # Q. リスト型 scores(40, 50)を作ってみよう
 # Q. ０番目を出す、リストの長さを出す、100を追加してみよう
 # Q. for文でscoresを順番に表示してみよう
 # Q. enumerateで何番目か表示してみよう



#####################################
### 第２４回 タプルを使ってみよう ###
#####################################

# Q. タプル(50, apple, 32.5)を作ってみよう



#################################################
### 第２５回 スライスで要素を切り出してみよう ###
#################################################
# Q. scores(2, 3, 4, 5, 6)からスライスで複数取り出してみよう



#####################################
### 第２６回 集合型を使ってみよう ###
#####################################

# Q. a(1, 3, 5, 8)とb(3, 5, 8, 9)のセットを作り、和集合、差集合、積集合を出してみよう



#####################################
### 第２７回 辞書型を使ってみよう ###
#####################################

# Q. taguchiさんが200, fkojiさんが400の辞書型(sales)を作ってみよう
# Q. taguchiの値を表示、値を変更、値を追加、fkojiを削除してみよう
# Q. itemsを使って、キーとバリューをfor文で順番にsalesを表示してみよう



#######################################
### 第２８回 イテレータを理解しよう ###
#######################################

# Q. リストscores(4, 5, 6, 7, 8, 9)をイテレータに変換しよう



##########################################
### 第２９回 map, lambdaを使ってみよう ###
##########################################

# Q. mapでリストの(1, 2, 3)をそれぞれ３倍にしてみよう
# Q. lambdaで同じことをしてみよう



#####################################
### 第３０回 filterを使ってみよう ###
#####################################

# Q. filterでrange(0, 10)の偶数の要素だけ抽出してみよう


















